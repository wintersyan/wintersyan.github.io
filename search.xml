<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>让你们都拥有自己Apple_Id绑定的官方下架iPA_Cross实践</title>
      <link href="/2020/05/06/rang-ni-men-du-yong-you-zi-ji-apple-id-bang-ding-de-guan-fang-xia-jia-ipa-cross-shi-jian/"/>
      <url>/2020/05/06/rang-ni-men-du-yong-you-zi-ji-apple-id-bang-ding-de-guan-fang-xia-jia-ipa-cross-shi-jian/</url>
      
        <content type="html"><![CDATA[<h2 id="让你们都拥有自己Apple-Id绑定的官方下架iPA-Cross实践"><a href="#让你们都拥有自己Apple-Id绑定的官方下架iPA-Cross实践" class="headerlink" title="让你们都拥有自己Apple Id绑定的官方下架iPA-Cross实践"></a>让你们都拥有自己Apple Id绑定的官方下架iPA-Cross实践</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>1、目前你可能需要一台电脑，不管是Mac、win机器都行。</p><p>2、iMazing，Mac系统上的App，可以从官方（<a href="https://imazing.com" target="_blank" rel="noopener">https://imazing.com</a>）下载体验即可，好用记得购买正版</p><p>3、因为是要生成自己的ID绑定的iPA，所以先要拥有一台已经安装了Cross这款App的手机，可以装别人给的iPA，能安装上即可，不用验证给你提供iPA这货的账号跟密码，提示，因为存在阉割版iPA的情况，所以最好用iTunes备份的iPA进行安装，群里我传了我的</p><h3 id="开干"><a href="#开干" class="headerlink" title="开干"></a>开干</h3><p>1、打开iMazing</p><p>2、把安装了我的iPA的手机插上，链接iMazing</p><p>3、选择左侧你手机下的应用程序</p><p>4、iMazing会刷新你手机已安装iPA的信息，这里点击中间下方的管理应用程序</p><p>5、这里又会刷新一会，这里刷的是你（Apple ID账号下已购买的App信息，包括已下架的）跟（你手机已安装App的交集）</p><p>6、把右上角的Apple ID账号退掉，保持空账号</p><p>7、在下方搜索框里输入cross，即可在资料库里显示出cross</p><p>8、Cross这行，右侧会出现下载按钮，点击下载</p><p>9、这里就知道为毛会要求在第6部把你的ID先退掉，点击下载会提示输入你输入Apple ID</p><p>10、输入你曾经购买过Cross的账号</p><p>11、开启下载，坐等完成，下载好的Cross iPA就是绑定了你自己Apple ID的iPA</p><h3 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h3><p>抛砖引玉，也是大佬指导下才做了这么个教程，从这个教程开始，咱们不再害怕苹果下载App，其他App操作是一致的，共勉</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>V2rayNG</title>
      <link href="/2020/05/06/v2rayng/"/>
      <url>/2020/05/06/v2rayng/</url>
      
        <content type="html"><![CDATA[<h2 id="应用概述"><a href="#应用概述" class="headerlink" title="应用概述"></a>应用概述</h2><p>V2rayNG 是在 Android 平台上的客户端软件，支持 VMess 及 Shadowsocks 协议。</p><h2 id="应用下载"><a href="#应用下载" class="headerlink" title="应用下载"></a>应用下载</h2><p>以下是各平台该应用的下载地址。</p><ul><li>Android：<a href="https://github.com/2dust/v2rayNG/releases" target="_blank" rel="noopener">V2rayNG</a></li><li>…</li></ul><h2 id="获取订阅"><a href="#获取订阅" class="headerlink" title="获取订阅"></a>获取订阅</h2><p>此处将显示您的订阅链接，请注意为登录状态：</p><p><a href="/sublink?type=v2ray" title=":include :type=markdown">cinwell website</a></p><p>!&gt; 这个 <strong>订阅链接</strong> 非常重要，你应当把它当做密码一样妥善保管。</p><h2 id="配置-V2rayNG"><a href="#配置-V2rayNG" class="headerlink" title="配置 V2rayNG"></a>配置 V2rayNG</h2><p>打开 V2rayNG 点击左上角的菜单图标打开侧边栏，随后点击 <strong>订阅设置</strong>。</p><p><img src="https://i.loli.net/2019/02/13/5c62fd8327c0e.png" alt="1" title=":size=600"></p><p>点击右上角的加号按钮，在新页面的备注中填写本站名称，地址输入框中粘贴上方 <strong><a href="#获取订阅">获取订阅</a></strong> 中的订阅链接并点击右上角的 <strong>√</strong>。</p><p><img src="https://i.loli.net/2019/02/13/5c62fef253cd4.jpg" alt="2" title=":size=200"></p><p>再次从侧边栏进入 <strong>设置</strong> 页面，点击 <strong>路由模式</strong> 将其更改为 <strong>绕过局域网及大陆地址</strong>。</p><p><img src="https://i.loli.net/2019/02/13/5c62ffab506fb.jpeg" alt="3" title=":size=600"></p><p>随后从侧边栏回到 <strong>配置文件</strong> 页面，点击右上角的省略号图标选择更新订阅。</p><p><img src="https://i.loli.net/2019/02/13/5c630072445ec.jpeg" alt="4" title=":size=400"></p><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><p>点击选择您中意的节点，点击右下角的按钮即可连接。</p><p>如操作系统提示添加 VPN 配置，请点击 运行 并验证您的 密码、指纹等。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>sspanel3  后端全自动一键脚本  配置教程</title>
      <link href="/2020/05/06/sspanel3-hou-duan-quan-zi-dong-yi-jian-jiao-ben-pei-zhi-jiao-cheng/"/>
      <url>/2020/05/06/sspanel3-hou-duan-quan-zi-dong-yi-jian-jiao-ben-pei-zhi-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h4 id="第一步，在-app-Controllers-Mod-Mu-添加代码："><a href="#第一步，在-app-Controllers-Mod-Mu-添加代码：" class="headerlink" title="第一步，在 /app/Controllers/Mod_Mu 添加代码："></a>第一步，在 /app/Controllers/Mod_Mu 添加代码：</h4><pre><code>    public function getIP()    {        global $ip;        if (getenv("HTTP_CLIENT_IP"))            $ip = getenv("HTTP_CLIENT_IP");        else if(getenv("HTTP_X_FORWARDED_FOR"))            $ip = getenv("HTTP_X_FORWARDED_FOR");        else if(getenv("REMOTE_ADDR"))            $ip = getenv("REMOTE_ADDR");        else $ip = "Unknow";        return $ip;    }    public function node($request, $response, $args)    {        $data_ss = Node::where(["node_ip"=&gt;$this-&gt;getIP(),'sort'=&gt;0])-&gt;first();        $data_v2 = Node::where(["node_ip"=&gt;$this-&gt;getIP(),'sort'=&gt;11])-&gt;first();        if($data_ss or $data_v2){            $res = [                "status"   =&gt;  "success",                "ss_id"   =&gt;  $data_ss["id"] ? $data_ss["id"] : 0 ,                "v2_id"   =&gt;  $data_v2["id"] ? $data_v2["id"] : 0 ,                "ip"   =&gt;   $this-&gt;getIP()            ];        }else{            $res = [                "status"   =&gt;  "error",                "id"   =&gt;  0,                "ip"   =&gt;  $this-&gt;getIP()            ];        }        return $this-&gt;echoJson($response, $res);    }</code></pre><h4 id="或者直接复制去覆盖整个文件："><a href="#或者直接复制去覆盖整个文件：" class="headerlink" title="或者直接复制去覆盖整个文件："></a>或者直接复制去覆盖整个文件：</h4><pre><code>&lt;?phpnamespace App\Controllers\Mod_Mu;use App\Controllers\BaseController;use App\Models\NodeInfoLog;use App\Models\Node;use App\Services\Config;class NodeController extends BaseController{    public function info($request, $response, $args)    {        $node_id = $args['id'];        if ($node_id == '0') {            $node = Node::where('node_ip', $_SERVER['REMOTE_ADDR'])-&gt;first();            $node_id = $node-&gt;id;        }        $load = $request-&gt;getParam('load');        $uptime = $request-&gt;getParam('uptime');        $log = new NodeInfoLog();        $log-&gt;node_id = $node_id;        $log-&gt;load = $load;        $log-&gt;uptime = $uptime;        $log-&gt;log_time = time();        if (!$log-&gt;save()) {            $res = [                'ret' =&gt; 0,                'data' =&gt; 'update failed',            ];            return $this-&gt;echoJson($response, $res);        }        $res = [            'ret' =&gt; 1,            'data' =&gt; 'ok',        ];        return $this-&gt;echoJson($response, $res);    }    public function get_info($request, $response, $args)    {        $node_id = $args['id'];        if ($node_id == '0') {            $node = Node::where('node_ip', $_SERVER['REMOTE_ADDR'])-&gt;first();            $node_id = $node-&gt;id;        }        $node = Node::find($node_id);        if ($node == null) {            $res = [                'ret' =&gt; 0            ];            return $this-&gt;echoJson($response, $res);        }        $res = [            'ret' =&gt; 1,            'data' =&gt; [                'node_group' =&gt; $node-&gt;node_group,                'node_class' =&gt; $node-&gt;node_class,                'node_speedlimit' =&gt; $node-&gt;node_speedlimit,                'traffic_rate' =&gt; $node-&gt;traffic_rate,                'mu_only' =&gt; $node-&gt;mu_only,                'sort' =&gt; $node-&gt;sort,                'server' =&gt; $node-&gt;server,                'type' =&gt; 'ss-panel-v3-mod_Uim'            ],        ];        return $this-&gt;echoJson($response, $res);    }    public function get_all_info($request, $response, $args)    {        $nodes = Node::where('node_ip', '&lt;&gt;', null)-&gt;where(            static function ($query) {                $query-&gt;where('sort', '=', 0)                    -&gt;orWhere('sort', '=', 10)                    -&gt;orWhere('sort', '=', 12);            }        )-&gt;get();        $res = [            'ret' =&gt; 1,            'data' =&gt; $nodes        ];        return $this-&gt;echoJson($response, $res);    }    public function getConfig($request, $response, $args)    {        $data = $request-&gt;getParsedBody();        switch ($data['type']) {            case ('database'):                $db_config = Config::getDbConfig();                $db_config['host'] = $this-&gt;getServerIP();                $res = [                    'ret' =&gt; 1,                    'data' =&gt; $db_config,                ];                break;            case ('webapi'):                $webapiConfig = [];                #todo        }        return $this-&gt;echoJson($response, $res);    }    private function getServerIP()    {        if (isset($_SERVER)) {            if ($_SERVER['SERVER_ADDR']) {                $serverIP = $_SERVER['SERVER_ADDR'];            } else {                $serverIP = $_SERVER['LOCAL_ADDR'];            }        } else {            $serverIP = getenv('SERVER_ADDR');        }        return $serverIP;    }    public function getIP()    {        global $ip;        if (getenv("HTTP_CLIENT_IP"))            $ip = getenv("HTTP_CLIENT_IP");        else if(getenv("HTTP_X_FORWARDED_FOR"))            $ip = getenv("HTTP_X_FORWARDED_FOR");        else if(getenv("REMOTE_ADDR"))            $ip = getenv("REMOTE_ADDR");        else $ip = "Unknow";        return $ip;    }    public function node($request, $response, $args)    {        $data_ss = Node::where(["node_ip"=&gt;$this-&gt;getIP(),'sort'=&gt;0])-&gt;first();        $data_v2 = Node::where(["node_ip"=&gt;$this-&gt;getIP(),'sort'=&gt;11])-&gt;first();        if($data_ss or $data_v2){            $res = [                "status"   =&gt;  "success",                "ss_id"   =&gt;  $data_ss["id"] ? $data_ss["id"] : 0 ,                "v2_id"   =&gt;  $data_v2["id"] ? $data_v2["id"] : 0 ,                "ip"   =&gt;   $this-&gt;getIP()            ];        }else{            $res = [                "status"   =&gt;  "error",                "id"   =&gt;  0,                "ip"   =&gt;  $this-&gt;getIP()            ];        }        return $this-&gt;echoJson($response, $res);    }}</code></pre><h4 id="第二步，在-config-routes-php-331行添加："><a href="#第二步，在-config-routes-php-331行添加：" class="headerlink" title="第二步，在/config/routes.php 331行添加："></a>第二步，在/config/routes.php 331行添加：</h4><pre><code>    $this-&gt;get('/nodes/info', App\Controllers\Mod_Mu\NodeController::class . ':node');</code></pre><h4 id="第三步，修改backend-py-里面的backend-url-和-backend-token"><a href="#第三步，修改backend-py-里面的backend-url-和-backend-token" class="headerlink" title="第三步，修改backend.py  里面的backend_url 和 backend_token"></a>第三步，修改backend.py  里面的backend_url 和 backend_token</h4><pre><code>backend_url = "https://www.baidu.com/" #机场网址  如：https://www.baidu.com/backend_token = 'token' #你的 mukey</code></pre><p>（backend.py的代码也在这下面，自行复制）</p><p>然后将脚本放在某主机，每次用命令即可实现…..：</p><pre><code>sudo rm -rf backend.py &amp;&amp; sudo wget https://xxxx.com/backend.py &amp;&amp; sudo python backend.py</code></pre><p>注意，在Azure主机里需要换位root权限：</p><pre><code>sudo -i</code></pre><h5 id="最终的效果是，全自动配置后端"><a href="#最终的效果是，全自动配置后端" class="headerlink" title="最终的效果是，全自动配置后端"></a>最终的效果是，全自动配置后端</h5><p>backend.py 的代码：</p><pre><code># -*- coding:UTF-8 -*-backend_url = "https://www.baidu.com/" #机场网址  如：https://www.baidu.com/backend_token = 'token' #你的 mukeydef run_cmd(cmd):    try:        import subprocess    except ImportError:        _, result_f, error_f = os.popen3(cmd)    else:        process = subprocess.Popen(cmd, shell=True,                                   stdout=subprocess.PIPE, stderr=subprocess.PIPE)        result_f, error_f = process.stdout, process.stderr    errors = error_f.read()    if errors:  pass    result_str = result_f.read().strip()    if result_f:   result_f.close()    if error_f:    error_f.close()    return result_strdef install():    base = run_cmd('rpm -qa|grep "docker"')    if not "docker" in base:        print("Docker 尚未安装 即将开始安装")        docker = run_cmd('docker version &gt; /dev/null || curl -fsSL get.docker.com | bash')        # print(docker)        print("Docker 安装成功")        docker = run_cmd('docker restart')        print("Docker 重启成功")    base = run_cmd('rpm -qa|grep "libpipeline"')    if not "libpipeline" in base:        print("Libpip 尚未安装 即将开始安装")        docker = run_cmd('curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py')        docker = run_cmd('python get-pip.py')        print("Libpip 安装成功")def get_node_id():    id = requests.get(backend_url  + "/mod_mu/nodes/info?key=" + backend_token)    id = id.content    arr = json.loads(id)    return arrdef start_ssr(id):    common = "sudo docker run -d --name=ssrmu -e NODE_ID=" + str(id) + " -e API_INTERFACE=modwebapi -e WEBAPI_URL="+ backend_url +" -e WEBAPI_TOKEN="+ backend_token +" --network=host --log-opt max-size=50m --log-opt max-file=3 --restart=always fanvinga/docker-ssrmu"    docker = run_cmd(common)    print("Ssrmu  运行成功")    print("Docker Id:" + docker)def start_v2ray(id):    common = 'docker run -d --name=v2ray -e speedtest=0  -e api_port=2333 -e PANELTYPE=0 -e usemysql=0 -e downWithPanel=0 -e node_id=' + str(id) + ' -e sspanel_url='+ backend_url +' -e key='+ backend_token +' --log-opt max-size=10m --log-opt max-file=5 --net=host -p 51201:51201/tcp -p 51201:51201/udp --restart=always --memory="300m"  --memory-swap="1g" rico93/v2ray_v3:go_pay'    docker = run_cmd(common)    print("V2ray  运行成功")    print("Docker Id:" + docker)def start():    arr = get_node_id()    if arr['ret']==0:        print("IP未获得授权 或 mukey错误")    elif arr['status']=="success":        if arr['ss_id']!=0:            print("当前SS节点ID：" + str(arr['ss_id']))            start_ssr(arr['ss_id'])        if arr['v2_id'] != 0:            print("当前V2节点ID：" + str(arr['v2_id']))            start_v2ray(arr['v2_id'])    else:        print("IP未获得授权 或 mukey错误")#如果pip未被安装，则安装！！！def pip():    base = run_cmd('pip -V')    if not "site-packages" in base:        pips = run_cmd("curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py")        print("下载 pip 成功")        pips = run_cmd("python get-pip.py")        print("安装 pip 成功")        pips = run_cmd("pip install requests")        print("安装 依赖 成功")def times():    pips = run_cmd('echo "0 3 * * * root python /root/backend.py" &gt;&gt; /etc/crontab')def stop():    docker = run_cmd('docker stop $(docker ps -a -q)')    print("Ssrmu  停止成功")    docker = run_cmd('docker  rm $(docker ps -a -q)')    print("Ssrmu  删除成功")def docker_restart():    docker = run_cmd('systemctl stop firewalld.service')    docker = run_cmd('systemctl disable firewalld.service')    docker = run_cmd('service docker restart')    print("Docker 重启成功")pip()import sys,os,requests,jsonimport warningswarnings.filterwarnings('ignore')sys1 = sys.argvif len(sys1)==2 and sys1[1]=="stop":    docker_restart()    stop()else:    install()    docker_restart()    stop()    start()    print('运行完毕\n')</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>V2Board部署教程</title>
      <link href="/2020/03/10/v2board-bu-shu-jiao-cheng/"/>
      <url>/2020/03/10/v2board-bu-shu-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h2 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h2><p>这里我们推荐使用aaPanel作为环境搭建的入门首选，机器的内存最好是1G，512M是最低要求配置。</p><p>本文教程是将 <strong>aaPanel</strong> 作为环境进行配置，部署机器由 <a href="https://www.moack.co.kr/dedicated.php" target="_blank" rel="noopener">Moack</a> 提供。</p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="1-配置aaPanel"><a href="#1-配置aaPanel" class="headerlink" title="1.配置aaPanel"></a>1.配置aaPanel</h3><p>你需要在 <a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6-5-4-installation-tutorial" target="_blank" rel="noopener">aaPanel</a> 选择你的系统获得安装方式。这里以 debian 作为系统环境进行安装。</p><pre class=" language-shell"><code class="language-shell">wget -O install.sh http://www.aapanel.com/script/install-ubuntu_6.0_en.sh && bash install.sh</code></pre><p>安装完成后我们登陆 aaPanel 进行环境的安装。</p><p>选择使用LNMP的环境安装方式勾选如下信息</p><p>☑️ Nginx 1.17</p><p>☑️ MySQL 5.6</p><p>☑️ PHP 7.3</p><p>以上环境版本号均为最低要求，选择 Fast 快速编译后进行安装。</p><h3 id="2-安装Redis"><a href="#2-安装Redis" class="headerlink" title="2.安装Redis"></a>2.安装Redis</h3><p>aaPanel 面板 &gt; App Store &gt; 找到PHP 7.3点击Setting &gt; Install extentions &gt; redis 进行安装。</p><h3 id="3-解除被禁止的函数"><a href="#3-解除被禁止的函数" class="headerlink" title="3.解除被禁止的函数"></a>3.解除被禁止的函数</h3><p>aaPanel 面板 &gt; App Store &gt; 找到PHP 7.3点击Setting &gt; Disabled functions 将 <code>putenv</code> <code>proc_open</code> <code>pcntl_alarm</code> <code>pcntl_signal</code>从列表中删除。</p><h3 id="4-添加站点"><a href="#4-添加站点" class="headerlink" title="4.添加站点"></a>4.添加站点</h3><p>aaPanel 面板 &gt; Website &gt; Add site。</p><pre><code>Domain：填入你指向服务器的域名Database：MySQLPHP version：PHP-73</code></pre><p>Submit 完成创建。</p><p>完成创建后访问站点目录删除目录下的所有文件，.user.ini 文件需要在 aaPanel 下单独点击 Del 删除。</p><p>添加完成后编辑添加的站点 &gt; Site directory &gt; Running directory 选择 /public 保存。</p><p>添加完成后编辑添加的站点 &gt; URL rewrite 填入伪静态信息。</p><pre class=" language-nginx"><code class="language-nginx"><span class="token keyword">location</span> <span class="token operator">/</span>downloads <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">{</span>      <span class="token keyword">try_files</span> <span class="token variable">$uri</span> <span class="token variable">$uri</span><span class="token operator">/</span> <span class="token operator">/</span><span class="token keyword">index</span><span class="token punctuation">.</span>php<span class="token variable">$is_args</span><span class="token variable">$query_string</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token keyword">location</span> <span class="token operator">~</span> <span class="token punctuation">.</span><span class="token operator">*</span>\<span class="token punctuation">.</span><span class="token punctuation">(</span>js<span class="token operator">|</span>css<span class="token punctuation">)</span><span class="token operator">?</span>$<span class="token punctuation">{</span>    <span class="token keyword">expires</span>      1h<span class="token punctuation">;</span>    <span class="token keyword">error_log</span> off<span class="token punctuation">;</span>    <span class="token keyword">access_log</span> <span class="token operator">/</span>dev<span class="token operator">/</span>null<span class="token punctuation">;</span> <span class="token punctuation">}</span></code></pre><p>到此站点添加完成。</p><h3 id="5-安装V2Board"><a href="#5-安装V2Board" class="headerlink" title="5.安装V2Board"></a>5.安装V2Board</h3><p>通过SSH登录到服务器后访问站点路径如：/www/wwwroot/domain.com。</p><p>以下命令都需要在站点目录进行执行。</p><p>执行命令从 Github 克隆到当前目录。</p><pre class=" language-shell"><code class="language-shell"># 1.0.1 为当前 V2Board 版本号git clone -b 1.0.1 https://github.com/v2board/v2board.git ./</code></pre><p>执行命令下载 composer.phar 到当前目录。</p><pre class=" language-shell"><code class="language-shell">wget https://getcomposer.org/download/1.9.0/composer.phar</code></pre><p>执行命令进行包安装。</p><pre class=" language-shell"><code class="language-shell">php composer.phar install</code></pre><p>安装过程中报错或者无法继续安装的请分配 swap，如何分配 swap 请查阅 google。</p><p>复制.env.example文件为.env。</p><pre class=" language-shell"><code class="language-shell"># domain.com 请更改为站点域名且路径必须存在cp .env.example .env</code></pre><p>打开 .env 文件，修改数据库信息并保存。</p><pre class=" language-shell"><code class="language-shell">DB_HOST=数据库地址DB_PORT=3306DB_DATABASE=数据库名DB_USERNAME=数据库用户名DB_PASSWORD=数据库密码</code></pre><p>保存后请重新给予目录权限</p><pre class=" language-shell"><code class="language-shell"># domain.com 请更改为站点域名且路径必须存在chown -R www ../domain.com</code></pre><p>执行命令进行面板的安装。</p><pre class=" language-shell"><code class="language-shell">php artisan v2board:install</code></pre><p>输入管理员账号密码，至此一切就绪，可以访问你的面板了。</p><h3 id="6-配置定时任务"><a href="#6-配置定时任务" class="headerlink" title="6.配置定时任务"></a>6.配置定时任务</h3><p>aaPanel 面板 &gt; Cron。</p><pre class=" language-shell"><code class="language-shell"># domain.com 请更改为站点域名且路径必须存在Type of Task：Shell ScriptName of Task：v2boardPeriod：N Minutes 1 MinuteScript content：php /www/wwwroot/domain.com/artisan schedule:run</code></pre><p>根据上述信息添加每1分钟执行一次的定时任务。</p><h3 id="7-启动队列服务"><a href="#7-启动队列服务" class="headerlink" title="7.启动队列服务"></a>7.启动队列服务</h3><p>队列服务将会应用在邮件发送等场景，请务必保证队列服务在后台运行正常。</p><p>你可以使用 nohup 让其在后台运行，但是 nohup 无法保证队列服务不会退出。 使用 nohup 方式你需要在站点目录下执行如下命令：</p><pre class=" language-shell"><code class="language-shell">nohup php artisan queue:work > queue.log 2>&1 &</code></pre><p>如果你想让队列服务长期保持稳定的在后台运作，你需要使用第三方软件如 supervisor 的 buff 加持。</p><p>如何使用 supervisor 在 google 你会得到想要的答案。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> v2board </category>
          
      </categories>
      
      
        <tags>
            
            <tag> v2board </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/03/06/hello-world/"/>
      <url>/2020/03/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
